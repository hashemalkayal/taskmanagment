{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs\\\\managmenttask\\\\src\\\\view\\\\task\\\\Task.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { Button, Input } from \"semantic-ui-react\";\nimport ListTaskItem from \"../../components/listTaskItem/ListTaskItem\";\nimport { clearTask, setAddTask, updateList, updateTask } from \"../../redux/actions/appActions\";\nimport { Status } from \"../../types/enums\";\nimport \"./task.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = () => {\n  _s();\n\n  const [taskName, setTaskName] = useState(\"\");\n  const TodoList = useSelector(state => state.App.todoList);\n  const dispatch = useDispatch();\n\n  const onAddTaskClick = () => {\n    if (!!taskName) {\n      const checkIfExsist = TodoList.find(item => {\n        var _item$title;\n\n        return (_item$title = item.title) === null || _item$title === void 0 ? void 0 : _item$title.includes(taskName);\n      });\n\n      if (checkIfExsist) {\n        toast.warn(\"task already exsist\");\n        return;\n      }\n\n      dispatch(setAddTask(taskName, Status.Todo));\n      playSound(\"addSound\");\n      toast.success(\"You have new task\");\n      setTaskName(\"\");\n      return;\n    }\n\n    toast.warn(\"Please Add New Task Name\", {\n      theme: \"dark\"\n    });\n  };\n\n  const onClearAllTask = () => {\n    if (!!TodoList && (TodoList === null || TodoList === void 0 ? void 0 : TodoList.length) > 0) dispatch(clearTask());\n  };\n\n  const onTodoClick = index => {\n    dispatch(updateTask(Status.Todo, index));\n  };\n\n  const onProgressClick = index => {\n    const checkStatus = TodoList.find((_, crrentIndex) => crrentIndex === index).status;\n    console.log(\"checkStatus\", checkStatus);\n\n    if (checkStatus !== Status.InProgress) {\n      dispatch(updateTask(Status.InProgress, index));\n      return;\n    }\n\n    toast.warn(\"task already In-Progress\", {\n      theme: \"colored\"\n    });\n  };\n\n  const onDoneClick = index => {\n    const checkStatus = TodoList.find((_, crrentIndex) => crrentIndex === index).status;\n\n    if (!!checkStatus && checkStatus !== Status.Completed) {\n      dispatch(updateTask(Status.Completed, index));\n      playSound(\"completedSound\");\n      toast.success(\"task completed\");\n      return;\n    }\n\n    toast.warn(\"task already completed\");\n  };\n\n  const removeTask = index => {\n    const temp = [...TodoList].filter((item, currentIndex) => currentIndex !== index);\n    dispatch(updateList(temp));\n  };\n\n  const playSound = sound => {\n    let audio = new Audio(require(`../../assets/sound/${sound}.wav`));\n    audio.play();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Task\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"form-countiner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"name-user\",\n        children: \"Hello Hashem!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"You have \", TodoList.length, \" tasks today\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"row-view\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: taskName,\n          onChange: e => setTaskName(e.target.value),\n          placeholder: \"What you have today ?\",\n          className: \"input-style\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          className: \"btn-style\",\n          content: \"Add Task\",\n          onClick: onAddTaskClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          className: \"btn-style\",\n          content: \"Clear All Task\",\n          onClick: onClearAllTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"list-coutniner\",\n      children: /*#__PURE__*/_jsxDEV(ListTaskItem, {\n        onDoneClick: onDoneClick,\n        onTodoClick: onTodoClick,\n        onProgressClick: onProgressClick,\n        removeTask: removeTask,\n        list: TodoList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"XCuu70QMrSbfAZGLcWU9fIMfAX8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","toast","Button","Input","ListTaskItem","clearTask","setAddTask","updateList","updateTask","Status","Task","taskName","setTaskName","TodoList","state","App","todoList","dispatch","onAddTaskClick","checkIfExsist","find","item","title","includes","warn","Todo","playSound","success","theme","onClearAllTask","length","onTodoClick","index","onProgressClick","checkStatus","_","crrentIndex","status","console","log","InProgress","onDoneClick","Completed","removeTask","temp","filter","currentIndex","sound","audio","Audio","require","play","e","target","value"],"sources":["D:/ReactJs/managmenttask/src/view/task/Task.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Input } from \"semantic-ui-react\";\r\nimport ListTaskItem from \"../../components/listTaskItem/ListTaskItem\";\r\nimport {\r\n  clearTask,\r\n  setAddTask,\r\n  updateList,\r\n  updateTask,\r\n} from \"../../redux/actions/appActions\";\r\nimport { IROOTSTATE } from \"../../redux/Stores\";\r\nimport { Status } from \"../../types/enums\";\r\nimport { IListTaskDto } from \"../../types/types\";\r\nimport \"./task.scss\";\r\n\r\nconst Task: FC = () => {\r\n  const [taskName, setTaskName] = useState<string>(\"\");\r\n\r\n  const TodoList = useSelector((state: IROOTSTATE) => state.App.todoList);\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddTaskClick = (): void => {\r\n    if (!!taskName) {\r\n      const checkIfExsist = TodoList.find((item: IListTaskDto) =>\r\n        item.title?.includes(taskName)\r\n      );\r\n\r\n      if (checkIfExsist) {\r\n        toast.warn(\"task already exsist\");\r\n        return;\r\n      }\r\n\r\n      dispatch(setAddTask(taskName, Status.Todo));\r\n      playSound(\"addSound\");\r\n      toast.success(\"You have new task\");\r\n      setTaskName(\"\");\r\n      return;\r\n    }\r\n\r\n    toast.warn(\"Please Add New Task Name\", {\r\n      theme: \"dark\",\r\n    });\r\n  };\r\n\r\n  const onClearAllTask = () => {\r\n    if (!!TodoList && TodoList?.length > 0) dispatch(clearTask());\r\n  };\r\n\r\n  const onTodoClick = (index: number): void => {\r\n    dispatch(updateTask(Status.Todo, index));\r\n  };\r\n\r\n  const onProgressClick = (index: number): void => {\r\n    const checkStatus: number | undefined = TodoList.find(\r\n      (_: any, crrentIndex: number) => crrentIndex === index\r\n    ).status;\r\n\r\n    console.log(\"checkStatus\", checkStatus);\r\n\r\n    if (checkStatus !== Status.InProgress) {\r\n      dispatch(updateTask(Status.InProgress, index));\r\n      return;\r\n    }\r\n\r\n    toast.warn(\"task already In-Progress\", {\r\n      theme: \"colored\",\r\n    });\r\n  };\r\n\r\n  const onDoneClick = (index: number): void => {\r\n    const checkStatus: number | undefined = TodoList.find(\r\n      (_: any, crrentIndex: number) => crrentIndex === index\r\n    ).status;\r\n\r\n    if (!!checkStatus && checkStatus !== Status.Completed) {\r\n      dispatch(updateTask(Status.Completed, index));\r\n      playSound(\"completedSound\");\r\n      toast.success(\"task completed\");\r\n      return;\r\n    }\r\n\r\n    toast.warn(\"task already completed\");\r\n  };\r\n\r\n  const removeTask = (index: number): void => {\r\n    const temp: Array<IListTaskDto> = [...TodoList].filter(\r\n      (item: IListTaskDto, currentIndex: number) => currentIndex !== index\r\n    );\r\n\r\n    dispatch(updateList(temp));\r\n  };\r\n\r\n  const playSound = (sound: string) => {\r\n    let audio = new Audio(require(`../../assets/sound/${sound}.wav`));\r\n    audio.play();\r\n  };\r\n\r\n  return (\r\n    <div className=\"Task\">\r\n      <section className=\"form-countiner\">\r\n        <h5 className=\"name-user\">Hello Hashem!</h5>\r\n        <h2>You have {TodoList.length} tasks today</h2>\r\n\r\n        <section className=\"row-view\">\r\n          <Input\r\n            value={taskName}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setTaskName(e.target.value)\r\n            }\r\n            placeholder=\"What you have today ?\"\r\n            className=\"input-style\"\r\n          />\r\n          <Button\r\n            primary\r\n            className=\"btn-style\"\r\n            content=\"Add Task\"\r\n            onClick={onAddTaskClick}\r\n          />\r\n          <Button\r\n            primary\r\n            className=\"btn-style\"\r\n            content=\"Clear All Task\"\r\n            onClick={onClearAllTask}\r\n          />\r\n        </section>\r\n      </section>\r\n\r\n      <main className=\"list-coutniner\">\r\n        <ListTaskItem\r\n          onDoneClick={onDoneClick}\r\n          onTodoClick={onTodoClick}\r\n          onProgressClick={onProgressClick}\r\n          removeTask={removeTask}\r\n          list={TodoList}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}